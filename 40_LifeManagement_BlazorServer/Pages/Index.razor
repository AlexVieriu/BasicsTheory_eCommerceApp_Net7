@page "/"

@inject ISingleton _singleton
@inject IScoped _scoped
@inject ITransient _transient


<div>Singleton Base: <b>@singleton</b></div>
<Singleton />
<br />
<div>Scoped Base: <b>@scoped</b></div>
<Scoped />
<br />
<div>Transient Base: <b>@transient</b></div>
<Transient />


<h5 class="mt-5">Singleton</h5>
<ul>
    <li>Caching Services</li>
    <li>Global Configuration</li>
    <li>Business Rules</li>
    <li>HttpClients</li>
    <li>Persisting state that's useful for the runtime of the application</li>
</ul>

<h5 class="mt-4">Scoped</h5>
<ul>
    <li>Persisting state throughtout application per request</li>
</ul>

<h5 class="mt-4">Tansient</h5>
<ul>
    <li>Database Access</li>
    <li>File Access</li>
    <li>Services that should dispose of their state</li>
    <li>When you need a fresh instance of an object every single time</li>
</ul>



@code {
    string? singleton;
    string? scoped;
    string? transient;

    protected override void OnInitialized()
    {
        singleton = _singleton.GetGuid();
        scoped = _scoped.GetGuid();
        transient = _transient.GetGuid();
    }
}

